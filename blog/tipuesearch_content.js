var tipuesearch = {"pages":[{"url":"./pages/about/","text":"2016Fall 修課成員網誌","tags":"misc","title":"About"},{"url":"./2016fallcp-qi-mo-kao-zhou.html","text":"2016fallcp 期末考週 W17 週心得與程式範例: W16 週心得與程式範例: W15 週心得與程式範例: 其中各週心得請嵌入個人現場操作 vimeo 影片 以 pre 附上練習的範例執行,以及課程影片摘要 期末影片 from 40523209 on Vimeo . window.onload=function(){ brython(1); } from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"chord1\"] ctx = canvas.getContext(\"2d\") def HH(e): ctx.fillStyle = \"#ffd700\" ctx.fillRect(0, 0, 300, 400) ctx.fillStyle = \"white\" ctx.fillRect(1, 240, 298, 60) ctx.fillStyle = \"#cd853f\" ctx.fillRect(0, 300, 300, 100) #右眼 ctx.beginPath() ctx.fillStyle = 'white' ctx.strokeStyle = \"black\" ctx.arc(200, 100, 45, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #左眼 ctx.beginPath() ctx.fillStyle = 'white' ctx.strokeStyle = \"black\" ctx.arc(100, 100, 45, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #左邊眼白 ctx.beginPath() ctx.fillStyle = 'blue' ctx.strokeStyle = \"black\" ctx.arc(110, 95, 20, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #右邊眼白 ctx.beginPath() ctx.fillStyle = 'blue' ctx.strokeStyle = \"black\" ctx.arc(190, 95, 20, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #左邊眼球 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(110, 95, 10, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #右邊眼球 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(190, 95, 10, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #嘴巴 ctx.fillStyle = \"black\" ctx.fillRect(75, 170, 150, 10) #左邊牙齒 ctx.fillStyle = \"white\" ctx.strokeStyle = \"black\" ctx.fillRect(150, 180, 25, 40) #右邊牙齒 ctx.fillStyle = \"white\" ctx.strokeStyle = \"black\" ctx.fillRect(120, 180, 25, 40) #衣服裝飾 ctx.fillStyle = \"black\" ctx.strokeStyle = \"black\" ctx.fillRect(80, 330, 40, 10) ctx.fillStyle = \"black\" ctx.strokeStyle = \"black\" ctx.fillRect(10, 330, 40, 10) ctx.fillStyle = \"black\" ctx.strokeStyle = \"black\" ctx.fillRect(250, 330, 40, 10) ctx.fillStyle = \"black\" ctx.strokeStyle = \"black\" ctx.fillRect(180, 330, 40, 10) def HHH(e): ctx.fillStyle = \"white\" ctx.fillRect(0, 0, 300, 400) doc[\"h\"].bind(\"click\", HH) doc[\"h1\"].bind(\"click\", HHH) Brython Canvas 繪圖 刪除 Brython Canvas 繪圖 from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"chord1\"] ctx = canvas.getContext(\"2d\") def HH(e): ctx.fillStyle = \"#ffd700\" ctx.fillRect(0, 0, 300, 400) ctx.fillStyle = \"white\" ctx.fillRect(1, 240, 298, 60) ctx.fillStyle = \"#cd853f\" ctx.fillRect(0, 300, 300, 100) #右眼 ctx.beginPath() ctx.fillStyle = 'white' ctx.strokeStyle = \"black\" ctx.arc(200, 100, 45, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #左眼 ctx.beginPath() ctx.fillStyle = 'white' ctx.strokeStyle = \"black\" ctx.arc(100, 100, 45, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #左邊眼白 ctx.beginPath() ctx.fillStyle = 'blue' ctx.strokeStyle = \"black\" ctx.arc(110, 95, 20, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #右邊眼白 ctx.beginPath() ctx.fillStyle = 'blue' ctx.strokeStyle = \"black\" ctx.arc(190, 95, 20, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #左邊眼球 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(110, 95, 10, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #右邊眼球 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(190, 95, 10, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() #嘴巴 ctx.fillStyle = \"black\" ctx.fillRect(75, 170, 150, 10) #左邊牙齒 ctx.fillStyle = \"white\" ctx.strokeStyle = \"black\" ctx.fillRect(150, 180, 25, 40) #右邊牙齒 ctx.fillStyle = \"white\" ctx.strokeStyle = \"black\" ctx.fillRect(120, 180, 25, 40) #衣服裝飾 ctx.fillStyle = \"black\" ctx.strokeStyle = \"black\" ctx.fillRect(80, 330, 40, 10) ctx.fillStyle = \"black\" ctx.strokeStyle = \"black\" ctx.fillRect(10, 330, 40, 10) ctx.fillStyle = \"black\" ctx.strokeStyle = \"black\" ctx.fillRect(250, 330, 40, 10) ctx.fillStyle = \"black\" ctx.strokeStyle = \"black\" ctx.fillRect(180, 330, 40, 10) def HHH(e): ctx.fillStyle = \"white\" ctx.fillRect(0, 0, 300, 400) doc[\"h\"].bind(\"click\", HH) doc[\"h1\"].bind(\"click\", HHH) Brython Canvas 繪圖 刪除 from browser import alert import random from browser import document from browser import html z1 = document[\"con1\"] z1 <= (\"猜0~100的遊戲\") g = document[\"con2\"] c = document[\"con\"] #ans = random.randint(1, 100) def z1(e): c.clear() ans = random.randint(1, 100) a_in = int(input(\"輸入整數:0~100\")) guess = 1 while ans != a_in: if a_in < ans: a_in = int(input(\"猜了幾\"+ (str(guess)) + \"次,\" + (str(a_in)) + \"太小了,在猜一次\")) else: a_in = int(input(\"猜了幾\"+ (str(guess)) + \"次,\" + (str(a_in)) + \"太大了,在猜一次\")) guess += 1 c <= (\"恭喜!答對了 ,共猜了\" + (str(guess)) + \"次,答案是\" + (str(ans))) def ANS(e): alert(\"有答案確定還要玩\") g.clear() c.clear() ans = random.randint(1, 100) #g <= ans g <= (\"答案是\" + (str(ans))) a_in = int(input(\"輸入整數:0~100\")) guess = 1 while ans != a_in: if a_in < ans: a_in = int(input(\"猜了幾\"+ (str(guess)) + \"次,\" + (str(a_in)) + \"太小了,在猜一次\")) else: a_in = int(input(\"猜了幾\"+ (str(guess)) + \"次,\" + (str(a_in)) + \"太大了,在猜一次\")) guess += 1 g <= (\"恭喜!答對了 ,共猜了\" + (str(guess)) + \"次,答案就是\" + (str(ans))) document[\"z1\"].bind(\"click\", z1) document[\"z2\"].bind(\"click\", ANS) 要自己猜的猜數字遊戲 告訴你答案的猜數字遊戲 以下猜數字遊戲 from browser import alert import random from browser import document from browser import html</p> <p>z1 = document[\"con1\"] z1 &lt;= (\"猜0~100的遊戲\")</p> <p>g = document[\"con2\"] c = document[\"con\"]</p> <h1>ans = random.randint(1, 100)</h1> <p>def z1(e): c.clear() ans = random.randint(1, 100) a_in = int(input(\"輸入整數:0~100\")) guess = 1</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2 3 4 5 6 7 8 9</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>while ans != a_in: if a_in &lt; ans: a_in = int(input(&quot;猜了幾&quot;+ (str(guess)) + &quot;次,&quot; + (str(a_in)) + &quot;太小了,在猜一次&quot;)) else: a_in = int(input(&quot;猜了幾&quot;+ (str(guess)) + &quot;次,&quot; + (str(a_in)) + &quot;太大了,在猜一次&quot;)) guess += 1 c &lt;= (&quot;恭喜!答對了 ,共猜了&quot; + (str(guess)) + &quot;次,答案是&quot; + (str(ans))) </pre></div> </td></tr></table> <p>def ANS(e): alert(\"有答案確定還要玩\") g.clear() c.clear() ans = random.randint(1, 100) #g &lt;= ans g &lt;= (\"答案是\" + (str(ans))) a_in = int(input(\"輸入整數:0~100\"))</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1 2 3 4 5 6 7 8 9 10 11</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>guess = 1 while ans != a_in: if a_in &lt; ans: a_in = int(input(&quot;猜了幾&quot;+ (str(guess)) + &quot;次,&quot; + (str(a_in)) + &quot;太小了,在猜一次&quot;)) else: a_in = int(input(&quot;猜了幾&quot;+ (str(guess)) + &quot;次,&quot; + (str(a_in)) + &quot;太大了,在猜一次&quot;)) guess += 1 g &lt;= (&quot;恭喜!答對了 ,共猜了&quot; + (str(guess)) + &quot;次,答案就是&quot; + (str(ans))) </pre></div> </td></tr></table> <p>document[\"z1\"].bind(\"click\", z1) document[\"z2\"].bind(\"click\", ANS) 要自己猜的猜數字遊戲 告訴你答案的猜數字遊戲 from browser import document as doc from browser import html container = doc['ex2'] def q(e): mystring = input(\"要印出什麼字串?\") mynum = input(\"要印幾次?\") for i in range(int(mynum)): #container<=\"W14練習-2\"+html.BR() container<=mystring+html.BR() def q1(e): container.clear() doc[\"j2\"].bind(\"click\", q1) doc[\"j1\"].bind(\"click\", q) 要印出什麼字串跟印幾次 刪除內容 迴圈練習 from browser import document as doc from browser import html container = doc['ex2']</p> <p>def q(e):</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2 3 4 5 6</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>mystring = input(&quot;要印出什麼字串?&quot;) mynum = input(&quot;要印幾次?&quot;) for i in range(int(mynum)): #container&lt;=&quot;W14練習-2&quot;+html.BR() container&lt;=mystring+html.BR() </pre></div> </td></tr></table> <p>def q1(e): container.clear() </p> <p>doc[\"j2\"].bind(\"click\", q1) <br /> doc[\"j1\"].bind(\"click\", q) 要印出什麼字串跟印幾次 刪除內容 from browser import document from browser import html a1 = document[\"a0101\"] def A1(e): #刪除(\"Hello World!\")只顯示一次 a1.clear() #print (\"Hello World!\") a1 <= (\"Hello World!\") document[\"a1\"].bind(\"click\", A1) 01-01練習 以下01-01練習 from browser import document from browser import html a1 = document[\"a0101\"]</p> <p>def A1(e): #刪除(\"Hello World!\")只顯示一次 a1.clear()</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>#print (&quot;Hello World!&quot;) a1 &lt;= (&quot;Hello World!&quot;) </pre></div> </td></tr></table> <p>document[\"a1\"].bind(\"click\", A1) 01-01練習 from browser import document a2 = document[\"a0102\"] def A2(e): #刪除只顯示一次 a2.clear() thetext = input(\"Enter some text \") #print (\"This is what you entered:\") #print (thetext) a2 <= (\"This is what you entered:\"+(thetext)) document[\"a2\"].bind(\"click\", A2) 01-02練習 以下01-02練習 from browser import document a2 = document[\"a0102\"]</p> <p>def A2(e):</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2 3 4 5 6 7</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>#刪除只顯示一次 a2.clear() thetext = input(&quot;Enter some text &quot;) #print (&quot;This is what you entered:&quot;) #print (thetext) a2 &lt;= (&quot;This is what you entered:&quot;+(thetext)) </pre></div> </td></tr></table> <p>document[\"a2\"].bind(\"click\", A2) 01-02練習 from browser import document a3 = document[\"a0103\"] def A3(e): #刪除只顯示一次 a3.clear() # Note that \\n within quote marks forces a new line to be printed thetext = input(\"Enter some text\\n\") #print (\"This is what you entered:\") #print (thetext) a3 <= (\"This is what you entered:\"+(thetext)) document[\"a3\"].bind(\"click\", A3) 01-03練習 以下01-03練習 from browser import document a3 = document[\"a0103\"]</p> <p>def A3(e):</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2 3 4 5 6 7</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span> #刪除只顯示一次 a3.clear() # Note that \\n within quote marks forces a new line to be printed thetext = input(&quot;Enter some text\\n&quot;) #print (&quot;This is what you entered:&quot;) #print (thetext) a3 &lt;= (&quot;This is what you entered:&quot;+(thetext)) </pre></div> </td></tr></table> <p>document[\"a3\"].bind(\"click\", A3) 01-03練習 from browser import document a4 = document[\"a0104\"] def A4(e): #刪除只顯示一次 a4.clear() prompt = \"Enter a some text \" thetext = input(prompt) #print (\"This is what you entered:\") #print (thetext) a4 <= (\"This is what you entered:\"+(thetext)) document[\"a4\"].bind(\"click\", A4) 01-04練習 以下01-04練習 from browser import document a4 = document[\"a0104\"]</p> <p>def A4(e):</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2 3 4 5 6 7</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>#刪除只顯示一次 a4.clear() prompt = &quot;Enter a some text &quot; thetext = input(prompt) #print (&quot;This is what you entered:&quot;) #print (thetext) a4 &lt;= (&quot;This is what you entered:&quot;+(thetext)) </pre></div> </td></tr></table> <p>document[\"a4\"].bind(\"click\", A4) 01-04練習 from browser import document b1 = document[\"b0201\"] def B1(e): #刪除上一個平均 b1.clear() total = 0.0 number1=float(input(\"Enter the first number: \")) total = total + number1 number2=float(input(\"Enter the second number: \")) total = total + number2 number3=float(input(\"Enter the third number: \")) total = total + number3 average = total / 3 b1 <= (\"The average is \" + str(average)) document[\"b1\"].bind(\"click\", B1) 02-01練習 以下02-01平均練習 from browser import document b1 = document[\"b0201\"]</p> <p>def B1(e): #刪除上一個平均 b1.clear()</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2 3 4 5 6 7 8 9</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>total = 0.0 number1=float(input(&quot;Enter the first number: &quot;)) total = total + number1 number2=float(input(&quot;Enter the second number: &quot;)) total = total + number2 number3=float(input(&quot;Enter the third number: &quot;)) total = total + number3 average = total / 3 b1 &lt;= (&quot;The average is &quot; + str(average)) </pre></div> </td></tr></table> <p>document[\"b1\"].bind(\"click\", B1) 02-01練習 from browser import document b2 = document[\"b0202\"] def B2(e): #刪除上一個 b2.clear() number1=float(input(\"Enter the first number: \")) number2=float(input(\"Enter the second number: \")) number3=float(input(\"Enter the third number: \")) total = number1 + number2 + number3 average = total / 3 #print (\"The average is: \") #print (average) b2 <= (\"The average is \" + str(average)) document[\"b2\"].bind(\"click\", B2) 02-02練習 以下02-02平均練習 from browser import document b2 = document[\"b0202\"]</p> <p>def B2(e): #刪除上一個 b2.clear() number1=float(input(\"Enter the first number: \")) number2=float(input(\"Enter the second number: \")) number3=float(input(\"Enter the third number: \")) total = number1 + number2 + number3 average = total / 3 #print (\"The average is: \") #print (average) b2 &lt;= (\"The average is \" + str(average))</p> <p>document[\"b2\"].bind(\"click\", B2) 02-02練習 from browser import document b3 = document[\"b0203\"] def B3(e): #刪除上一個 b3.clear() total = 0.0 count = 0 while count < 3: number=float(input(\"Enter a number: \")) count = count + 1 total = total + number average = total / 3 #print (\"The average is \" + str(average)) b3 <= (\"The average is \" + str(average)) document[\"b3\"].bind(\"click\", B3) 02-03練習 以下02-03平均練習 from browser import document b3 = document[\"b0203\"]</p> <p>def B3(e): #刪除上一個 b3.clear() total = 0.0 count = 0 while count &lt; 3: number=float(input(\"Enter a number: \")) count = count + 1 total = total + number average = total / 3 #print (\"The average is \" + str(average)) b3 &lt;= (\"The average is \" + str(average))</p> <p>document[\"b3\"].bind(\"click\", B3) 02-03練習 from browser import document c1 = document[\"c0301\"] def C1(e): #刪掉上一個 c1.clear() sum = 10 c1 <= (str(sum)) document[\"c1\"].bind(\"click\", C1) 03-01,03-02練習 以下03-01,03-02練習 from browser import document</p> <p>c1 = document[\"c0301\"]</p> <p>def C1(e): #刪掉上一個 c1.clear()</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2 3</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>sum = 10 c1 &lt;= (str(sum)) </pre></div> </td></tr></table> <p>document[\"c1\"].bind(\"click\", C1) 03-01,03-02練習 from browser import document c3 = document[\"c0303\"] def C3(e): #刪掉上一個 c3.clear() sum = 10 #print (sum) #print (type (sum)) c3 <= (sum) c3 <= (type(sum)) document[\"c3\"].bind(\"click\", C3) 03-03練習 以下03-03練習 from browser import document</p> <p>c3 = document[\"c0303\"]</p> <p>def C3(e): #刪掉上一個 c3.clear() sum = 10 #print (sum) #print (type (sum)) c3 &lt;= (sum) c3 &lt;= (type(sum))</p> <p>document[\"c3\"].bind(\"click\", C3) 03-03練習 from browser import document from browser import html c4 = document[\"c0304\"] cc = document[\"cs\"] cc <= (\"2+4 , 6-4 , 6*3 , 6/3 , 6%3 , 6//3 , -5 , 3的2次方 答案\") def C4(e): #print (2 + 4) #print (6 - 4) #print (6 * 3) #print (6 / 3) #print (6 % 3) #print (6 // 3) # floor division: always truncates fractional remainders #print (-5) #print (3**2) # three to the power of 2 c4 <= (2 + 4)+html.BR() c4 <= (6 - 4)+html.BR() c4 <= (6 * 3)+html.BR() c4 <= (6 /3)+html.BR() c4 <= (6 % 3)+html.BR() c4 <= (6 // 3)+html.BR() c4 <= (-5)+html.BR() c4 <= (3**2)+html.BR() def cd(e): c4.clear() document[\"c4\"].bind(\"click\", C4) document[\"cd\"].bind(\"click\", cd) 03-04練習 刪除 以下03-04練習 from browser import document from browser import html c4 = document[\"c0304\"]</p> <p>cc = document[\"cs\"]</p> <p>cc &lt;= (\"2+4 , 6-4 , 6*3 , 6/3 , 6%3 , 6//3 , -5 , 3的2次方 答案\")</p> <p>def C4(e): </p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>#print (2 + 4) #print (6 - 4) #print (6 * 3) #print (6 / 3) #print (6 % 3) #print (6 // 3) # floor division: always truncates fractional remainders #print (-5) #print (3**2) # three to the power of 2 c4 &lt;= (2 + 4)+html.BR() c4 &lt;= (6 - 4)+html.BR() c4 &lt;= (6 * 3)+html.BR() c4 &lt;= (6 /3)+html.BR() c4 &lt;= (6 % 3)+html.BR() c4 &lt;= (6 // 3)+html.BR() c4 &lt;= (-5)+html.BR() c4 &lt;= (3**2)+html.BR() </pre></div> </td></tr></table> <p>def cd(e): c4.clear()</p> <p>document[\"c4\"].bind(\"click\", C4) document[\"cd\"].bind(\"click\", cd) 03-04練習 刪除 from browser import document from browser import html c9 = document[\"c0309\"] def C9(e): # these are string assignments a9=(\"Hello out there\") #print (a) b9=(\"Hello\") #print (b) c5=(\"Where's the spam?\") #print (c) dd=(\"x\") #print (d) c9 <= (a9)+html.BR() c9 <= (b9)+html.BR() c9 <= (c5)+html.BR() c9 <= (dd)+html.BR() def c6(e): c9.clear() document[\"c9\"].bind(\"click\", C9) document[\"c6\"].bind(\"click\", c6) 03-09練習 刪除 以下03-09練習 from browser import document from browser import html</p> <p>c9 = document[\"c0309\"] def C9(e): # these are string assignments a9=(\"Hello out there\") #print (a) b9=(\"Hello\") #print (b) c5=(\"Where's the spam?\") #print (c) dd=(\"x\") #print (d)</p> <table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1 2 3 4 5 6 7</pre></div></td><td class=\"code\"><div class=\"codehilite\"><pre><span></span>c9 &lt;= (a9)+html.BR() c9 &lt;= (b9)+html.BR() c9 &lt;= (c5)+html.BR() c9 &lt;= (dd)+html.BR() </pre></div> </td></tr></table> <p>def c6(e): c9.clear()</p> <p>document[\"c9\"].bind(\"click\", C9) document[\"c6\"].bind(\"click\", c6) 03-09練習 刪除 W15影片內容 整理14週影片跟程式範例使用 2017-01-09_13-36-34 from 40523209 on Vimeo . W16影片內容 RoboDK的使用方法跟製作猜數字遊戲!! 2017-01-09_13-51-36 from 40523209 on Vimeo . W17影片內容 2017-01-09_13-58-22 from 40523209 on Vimeo .","tags":"Misc","title":"2016fallcp 期末考週"},{"url":"./w16.html","text":"W16 window.onload=function(){ brython(1); } from browser import alert import random from browser import document from browser import html z1 = document[\"con1\"] z1 <= (\"猜0~100的遊戲\") c = document[\"con\"] #ans = random.randint(1, 100) def z1(e): c.clear() ans = random.randint(1, 100) a_in = int(input(\"輸入整數:0~100\")) guess = 1 while ans != a_in: if a_in < ans: a_in = int(input(\"猜了幾\"+ (str(guess)) + \"次,\" + (str(a_in)) + \"太小了,在猜一次\")) else: a_in = int(input(\"猜了幾\"+ (str(guess)) + \"次,\" + (str(a_in)) + \"太大了,在猜一次\")) guess += 1 c <= (\"恭喜!答對了 ,共猜了\" + (str(guess)) + \"次,答案是\" + (str(ans))) document[\"z1\"].bind(\"click\", z1) 猜數字遊戲","tags":"Misc","title":"W16"},{"url":"./w15-zheng-li-ying-pian-zhong-dian.html","text":"W14影片重點 整理各週教學影片 cpa_W14-1 影片說明 從 Leo Editor 的節點 @edit @path @button 的用法到 pelican 轉 .md 檔案成為 blog 網誌, 並加入 Brython 程式導入與執行的方法 @settings->設定節點 @edit->增新節點 @path->儲存路徑 @button->按鈕 移動節點 ctrl+u 向上移動 ctrl+d 向下移動 ctrl+r 向右移動 ctrl+l 向左移動 ctrl+i 新增內容 ctrl+b 執行內容 影片 cpa_w14-1 from 虎尾科大機械設計工程 on Vimeo . 重複播放www.ytrepeat.com/影片號碼","tags":"Misc","title":"W15 整理影片重點"},{"url":"./w14-lian-xi.html","text":"以下為第十四週開始的城市練習,要利用 http://mde.tw/2016fallcp/course/Python3Programs.txt 要整理Brython 的用法. window.onload=function(){ brython(1); } from browser import document as doc container = doc['ex1'] container<=\"W14練習\" from browser import document as doc from browser import html container = doc['ex2'] def q(e): mystring = input(\"要印出什麼字串?\") mynum = input(\"要印幾次?\") for i in range(int(mynum)): #container<=\"W14練習-2\"+html.BR() container<=mystring+html.BR() doc[\"z1\"].bind(\"click\", q) 要印出什麼字串跟印幾次 程式內容 from browser import document as doc from browser import html container = doc['ex2'] def q(e): mystring = input(\"要印出什麼字串?\") mynum = input(\"要印幾次?\") for i in range(int(mynum)): #container<=\"W14練習-2\"+html.BR() container<=mystring+html.BR() doc[\"z1\"].bind(\"click\", q) 要印出什麼字串跟印幾次","tags":"Misc","title":"W14 練習"},{"url":"./w13.html","text":"畫線練習 畫線練習 window.onload=function(){ brython(1); } from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"chord1\"] ctx = canvas.getContext(\"2d\") ''' # 改用 background 函式繪圖 # 水平線 for i in range(5): ctx.beginPath() # 設定線的寬度為 1 個單位 if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(99, 100+i*30) ctx.lineTo(201, 100+i*30) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直線 for i in range(6): ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 ctx.moveTo(100+i*20, 100) ctx.lineTo(100+i*20, 220) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() ''' def canvasText(x, y, fontSize, string, sup, sub, color, ctx): # 標定各弦音符號, 以及把位編號 ctx.beginPath() ctx.fillStyle = color ctx.strokeStyle = color #ctx.font = \"20px Arial\" ctx.font = str(fontSize)+ \"px Arial\" ctx.fillText(string, x, y) ctx.font = str(fontSize-8)+ \"px Arial\" if sup != \"\": ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2) if sub != \"\": ctx.fillText(sup, x+fontSize/1.6, y) ctx.fill() ctx.stroke() ctx.closePath() # 設法利用運算印出吉他各把位的音名 def doreme(x, y, fontSize, order, ctx): # EADGBE (guitar string) # FgGaAbBCdDeE (C=Do, D=Re, E=Mi) #簡譜 1 2 3 4 5 6 7 #音名 C D E F G A B #唱名 Do Re Mi Fa Sol La Ti # 讓音名數列可以每 12 音名後, 升高 key 後從頭開始 if order > 12: order = order % 12 if order == 1: canvasText(x, y, fontSize, \"A\", \"\", \"\", \"black\", ctx) elif order ==2: canvasText(x, y, fontSize, \"B\", \"b\", \"\", \"red\", ctx) elif order == 3: canvasText(x, y, fontSize, \"B\", \"\", \"\", \"black\", ctx) elif order == 4: canvasText(x, y, fontSize, \"C\", \"\", \"\", \"black\", ctx) elif order == 5: canvasText(x, y, fontSize, \"D\", \"b\", \"\", \"red\", ctx) elif order == 6: canvasText(x, y, fontSize, \"D\", \"\", \"\", \"black\", ctx) elif order == 7: canvasText(x, y, fontSize, \"E\", \"b\", \"\", \"red\", ctx) elif order == 8: canvasText(x, y, fontSize, \"E\", \"\", \"\", \"black\", ctx) elif order == 9: canvasText(x, y, fontSize, \"F\", \"\", \"\", \"black\", ctx) elif order == 10: canvasText(x, y, fontSize, \"G\", \"b\", \"\", \"red\", ctx) elif order == 11: canvasText(x, y, fontSize, \"G\", \"\", \"\", \"black\", ctx) elif order == 12: canvasText(x, y, fontSize, \"A\", \"b\", \"\", \"red\", ctx) else: canvasText(x, y, fontSize, \"A\", \"b\", \"\", \"red\", ctx) def background(x, y, xinc, yinc, xnum, ynum, ctx): # 水平線 for i in range(ynum+1): ctx.beginPath() # 設定線的寬度為 1 個單位 if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(x-1, y+i*yinc) ctx.lineTo(x+xnum*xinc+1, y+i*yinc) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直線 for i in range(xnum+1): ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 ctx.moveTo(x+i*xinc, y) ctx.lineTo(x+i*xinc, y+ynum*yinc) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 標定各弦音符號, 以及把位編號 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"20px Arial\" sixString = [\"E\", \"A\", \"D\", \"G\", \"B\", \"E\"] stringNum = 0 for i in sixString: ctx.fillText(i, x-7+stringNum*xinc, y-10) stringNum = stringNum + 1 num = 1 for j in range(1,20,1): ctx.fillText(j,50,95+num*yinc) num = num + 1 ctx.fill() ctx.stroke() ctx.closePath() # EADGBE (guitar string) # FgGaAbBCdDeE (C=Do, D=Re, E=Mi) #################################### # 以下利用數列運算, 從已知第1把位的音名分別推算各把位的音名 # 吉他初始音名次序 816(11)38 #################################### firstBar = [8, 1, 6, 11, 3, 8] # j 為往下增量 for j in range(19): # k 為 往右把位初始值 fontSize = 15 for k in range(6): bx = x + (k)*w - fontSize/3 by = y + (j)*h+h/2 + fontSize/2 order = firstBar[k] + j + 1 doreme(bx, by, fontSize, order, ctx) # 一開始 x, y 為圓球圓心, 但是為了配合和弦繪圖 # 將 x, y 改為和弦的左上角座標 x, y # 配合 w, h, wcoord, hcoord 進行運算得到圓的圓心座標 bx, by #def ball(x, y, w, h , wcoord, hcoord, r, color, ctx): def ball(x, y, w, h , wcoord, hcoord, color, ctx): bx = x + (wcoord-1)*w by = y + (hcoord-1)*h+h/2 if w < h: r2 = w/2 -2 else: r2 = h/2 -2 ctx.beginPath() #ctx.fillStyle = 'black' ctx.fillStyle = color #ctx.strokeStyle = \"black\" ctx.strokeStyle = color #ctx.arc(50, 80, 9, 0, 2*math.pi, False) ctx.arc(bx, by, r2, 0, 2*math.pi, False) # 為了疊上各把位的音名, 暫時不填色 #ctx.fill() ctx.stroke() ctx.closePath() x = 300 y = 200 w = 20 h = 30 # 將前面的水平線與垂直線繪圖改用 background 繪圖 background(100, 100, w, h, 5, 19, ctx) #background(x, y, w, h, 5, 4, ctx) #background(100, 300, 10, 10, 5, 4, ctx) #background(300, 100, 10, 10, 5, 12, ctx) # 配合 300, 300 的和絃背景, w=30, h=30, (1,1) 位置放入圓 #for i in range( 6): # for j in range(3): # ball(x, y, w, h, i+1, j+1, 'black', ctx) #ball(x, y, w, h, 1, 4, 'red', ctx) #ball(300, 300, 30, 20, 1, 1, 9, 'black', ctx)","tags":"Misc","title":"W13"},{"url":"./w12.html","text":"畫19格吉他譜 畫線練習 window.onload=function(){ brython(1); } from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"chord1\"] ctx = canvas.getContext(\"2d\") ''' # 改用 background 函式繪圖 # 水平線 for i in range(5): ctx.beginPath() # 設定線的寬度為 1 個單位 if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(99, 100+i*30) ctx.lineTo(201, 100+i*30) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直線 for i in range(6): ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 ctx.moveTo(100+i*20, 100) ctx.lineTo(100+i*20, 220) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() ''' def canvasText(x, y, fontSize, string, sup, sub, color, ctx): # 標定各弦音符號, 以及把位編號 ctx.beginPath() ctx.fillStyle = color ctx.strokeStyle = color #ctx.font = \"20px Arial\" ctx.font = str(fontSize)+ \"px Arial\" ctx.fillText(string, x, y) ctx.font = str(fontSize-8)+ \"px Arial\" if sup != \"\": ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2) if sub != \"\": ctx.fillText(sup, x+fontSize/1.6, y) ctx.fill() ctx.stroke() ctx.closePath() # 設法利用運算印出吉他各把位的音名 def doreme(x, y, fontSize, order, ctx): # EADGBE (guitar string) # FgGaAbBCdDeE (C=Do, D=Re, E=Mi) #簡譜 1 2 3 4 5 6 7 #音名 C D E F G A B #唱名 Do Re Mi Fa Sol La Ti # 讓音名數列可以每 12 音名後, 升高 key 後從頭開始 if order > 12: order = order % 12 if order == 1: canvasText(x, y, fontSize, \"A\", \"\", \"\", \"black\", ctx) elif order ==2: canvasText(x, y, fontSize, \"B\", \"b\", \"\", \"red\", ctx) elif order == 3: canvasText(x, y, fontSize, \"B\", \"\", \"\", \"black\", ctx) elif order == 4: canvasText(x, y, fontSize, \"C\", \"\", \"\", \"black\", ctx) elif order == 5: canvasText(x, y, fontSize, \"D\", \"b\", \"\", \"red\", ctx) elif order == 6: canvasText(x, y, fontSize, \"D\", \"\", \"\", \"black\", ctx) elif order == 7: canvasText(x, y, fontSize, \"E\", \"b\", \"\", \"red\", ctx) elif order == 8: canvasText(x, y, fontSize, \"E\", \"\", \"\", \"black\", ctx) elif order == 9: canvasText(x, y, fontSize, \"F\", \"\", \"\", \"black\", ctx) elif order == 10: canvasText(x, y, fontSize, \"G\", \"b\", \"\", \"red\", ctx) elif order == 11: canvasText(x, y, fontSize, \"G\", \"\", \"\", \"black\", ctx) elif order == 12: canvasText(x, y, fontSize, \"A\", \"b\", \"\", \"red\", ctx) else: canvasText(x, y, fontSize, \"A\", \"b\", \"\", \"red\", ctx) def background(x, y, xinc, yinc, xnum, ynum, ctx): # 水平線 for i in range(ynum+1): ctx.beginPath() # 設定線的寬度為 1 個單位 if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(x-1, y+i*yinc) ctx.lineTo(x+xnum*xinc+1, y+i*yinc) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直線 for i in range(xnum+1): ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 ctx.moveTo(x+i*xinc, y) ctx.lineTo(x+i*xinc, y+ynum*yinc) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 標定各弦音符號, 以及把位編號 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"20px Arial\" sixString = [\"E\", \"A\", \"D\", \"G\", \"B\", \"E\"] stringNum = 0 for i in sixString: ctx.fillText(i, x-7+stringNum*xinc, y-10) stringNum = stringNum + 1 num = 1 for j in range(1,20,1): ctx.fillText(j,50,95+num*yinc) num = num + 1 ctx.fill() ctx.stroke() ctx.closePath() # EADGBE (guitar string) # FgGaAbBCdDeE (C=Do, D=Re, E=Mi) #################################### # 以下利用數列運算, 從已知第1把位的音名分別推算各把位的音名 # 吉他初始音名次序 816(11)38 #################################### firstBar = [8, 1, 6, 11, 3, 8] # j 為往下增量 for j in range(0): # k 為 往右把位初始值 fontSize = 15 for k in range(6): bx = x + (k)*w - fontSize/3 by = y + (j)*h+h/2 + fontSize/2 order = firstBar[k] + j + 1 doreme(bx, by, fontSize, order, ctx) # 一開始 x, y 為圓球圓心, 但是為了配合和弦繪圖 # 將 x, y 改為和弦的左上角座標 x, y # 配合 w, h, wcoord, hcoord 進行運算得到圓的圓心座標 bx, by #def ball(x, y, w, h , wcoord, hcoord, r, color, ctx): def ball(x, y, w, h , wcoord, hcoord, color, ctx): bx = x + (wcoord-1)*w by = y + (hcoord-1)*h+h/2 if w < h: r2 = w/2 -2 else: r2 = h/2 -2 ctx.beginPath() #ctx.fillStyle = 'black' ctx.fillStyle = color #ctx.strokeStyle = \"black\" ctx.strokeStyle = color #ctx.arc(50, 80, 9, 0, 2*math.pi, False) ctx.arc(bx, by, r2, 0, 2*math.pi, False) # 為了疊上各把位的音名, 暫時不填色 #ctx.fill() ctx.stroke() ctx.closePath() x = 300 y = 200 w = 20 h = 30 # 將前面的水平線與垂直線繪圖改用 background 繪圖 background(100, 100, w, h, 5, 19, ctx) #background(x, y, w, h, 5, 4, ctx) #background(100, 300, 10, 10, 5, 4, ctx) #background(300, 100, 10, 10, 5, 12, ctx) # 配合 300, 300 的和絃背景, w=30, h=30, (1,1) 位置放入圓 #for i in range( 6): # for j in range(3): # ball(x, y, w, h, i+1, j+1, 'black', ctx) #ball(x, y, w, h, 1, 4, 'red', ctx) #ball(300, 300, 30, 20, 1, 1, 9, 'black', ctx) window.onload=function(){ brython(1); } 1-19數字 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ctx.beginPath() ctx.fillText = 'black' ctx.strokeStyle = \"black\" num = 1 for j in range(1,20,1): ctx.fillText(j,50,95+num*yinc) num = num + 1 ctx.fillText() ctx.stroke() ctx.closePath() from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"chord1\"] ctx = canvas.getContext(\"2d\") ''' # 改用 background 函式繪圖 # 水平線 for i in range(5): ctx.beginPath() # 設定線的寬度為 1 個單位 if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(99, 100+i*30) ctx.lineTo(201, 100+i*30) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直線 for i in range(6): ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 ctx.moveTo(100+i*20, 100) ctx.lineTo(100+i*20, 220) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() x = 300 y = 200 w = 20 h = 30 background(100, 100, w, h, 5, 19, ctx)","tags":"Misc","title":"W12"},{"url":"./w11.html","text":"畫線練習 畫線練習 window.onload=function(){ brython(1); } from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"chord1\"] ctx = canvas.getContext(\"2d\") def background(x, y, xinc, yinc, xnum, ynum, ctx): # 水平 for i in range(ynum+1): ctx.beginPath() if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(x-1, y+i*yinc) ctx.lineTo(x+xnum*xinc+1, y+i*yinc) ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直 for i in range(xnum+1): ctx.beginPath() ctx.lineWidth = 1 ctx.moveTo(x+i*xinc, y) ctx.lineTo(x+i*xinc, y+ynum*yinc) ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() background(50, 100, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"AMajor\", 50, 70) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(90, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 85, 143) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(110, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 105, 143) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(130, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 125, 143) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(70, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(150, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 90, 5, 0, 2*math.pi, False) ctx.moveTo(45, 85) ctx.lineTo(55, 95) ctx.moveTo(55, 85) ctx.lineTo(45, 95) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(250, 100, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"CMajor\", 250, 70) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(330, 113, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 325, 118) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(290, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 285, 143) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(270, 162, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 265, 167) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(310, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(350, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(250, 90, 5, 0, 2*math.pi, False) ctx.moveTo(245, 85) ctx.lineTo(255, 95) ctx.moveTo(255, 85) ctx.lineTo(245, 95) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(450, 100, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"GMajor\", 450, 70) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(470, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 465, 143) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(450, 162, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 445, 167) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(530, 162, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 525, 167) ctx.fill() ctx.stroke() ctx.closePath() # 4 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(550, 162, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"4\", 545, 167) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(490, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(510, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(50, 300, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"DMajor\", 50, 270) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(110, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 105, 343) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(130, 362, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 125, 367) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(150, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 145, 343) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(90, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() #ctx.arc(150, 390, 5, 0, 2*math.pi, False) #ctx.lineWidth =3 #ctx.strokeStyle = \"black\" #ctx.stroke() #ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 390, 5, 0, 2*math.pi, False) ctx.moveTo(45, 285) ctx.lineTo(55, 295) ctx.moveTo(55, 285) ctx.lineTo(45, 295) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 90, 5, 0, 2*math.pi, False) ctx.moveTo(65, 285) ctx.lineTo(75, 295) ctx.moveTo(75, 285) ctx.lineTo(65, 295) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(250, 300, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"EMajor\", 250, 270) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(310, 313, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 305, 318) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(270, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 265, 343) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(290, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 285, 343) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(330, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() #ctx.arc(150, 390, 5, 0, 2*math.pi, False) #ctx.lineWidth =3 #ctx.strokeStyle = \"black\" #ctx.stroke() #ctx.closePath() # o ctx.beginPath() ctx.arc(350, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() #ctx.arc(150, 390, 5, 0, 2*math.pi, False) #ctx.lineWidth =3 #ctx.strokeStyle = \"black\" #ctx.stroke() #ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 390, 5, 0, 2*math.pi, False) ctx.moveTo(245, 285) ctx.lineTo(255, 295) ctx.moveTo(255, 285) ctx.lineTo(245, 295) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(450, 300, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"Cmaj7\", 450, 270) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(490, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 485, 343) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(470, 362, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 465, 367) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(510, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() #ctx.arc(150, 390, 5, 0, 2*math.pi, False) #ctx.lineWidth =3 #ctx.strokeStyle = \"black\" #ctx.stroke() #ctx.closePath() # o ctx.beginPath() ctx.arc(530, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(550, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 390, 5, 0, 2*math.pi, False) ctx.moveTo(445, 285) ctx.lineTo(455, 295) ctx.moveTo(455, 285) ctx.lineTo(445, 295) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() 上述: window.onload=function(){ brython(1); } from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"chord1\"] ctx = canvas.getContext(\"2d\") def background(x, y, xinc, yinc, xnum, ynum, ctx): # 水平 for i in range(ynum+1): ctx.beginPath() if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(x-1, y+i*yinc) ctx.lineTo(x+xnum*xinc+1, y+i*yinc) ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直 for i in range(xnum+1): ctx.beginPath() ctx.lineWidth = 1 ctx.moveTo(x+i*xinc, y) ctx.lineTo(x+i*xinc, y+ynum*yinc) ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() background(50, 100, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"AMajor\", 50, 70) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(90, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 85, 143) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(110, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 105, 143) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(130, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 125, 143) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(70, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(150, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 90, 5, 0, 2*math.pi, False) ctx.moveTo(45, 85) ctx.lineTo(55, 95) ctx.moveTo(55, 85) ctx.lineTo(45, 95) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(250, 100, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"CMajor\", 250, 70) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(330, 113, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 325, 118) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(290, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 285, 143) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(270, 162, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 265, 167) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(310, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(350, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(250, 90, 5, 0, 2*math.pi, False) ctx.moveTo(245, 85) ctx.lineTo(255, 95) ctx.moveTo(255, 85) ctx.lineTo(245, 95) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(450, 100, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"GMajor\", 450, 70) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(470, 138, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 465, 143) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(450, 162, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 445, 167) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(530, 162, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 525, 167) ctx.fill() ctx.stroke() ctx.closePath() # 4 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(550, 162, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"4\", 545, 167) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(490, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(510, 90, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(50, 300, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"DMajor\", 50, 270) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(110, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 105, 343) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(130, 362, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 125, 367) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(150, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 145, 343) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(90, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() #ctx.arc(150, 390, 5, 0, 2*math.pi, False) #ctx.lineWidth =3 #ctx.strokeStyle = \"black\" #ctx.stroke() #ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 390, 5, 0, 2*math.pi, False) ctx.moveTo(45, 285) ctx.lineTo(55, 295) ctx.moveTo(55, 285) ctx.lineTo(45, 295) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 90, 5, 0, 2*math.pi, False) ctx.moveTo(65, 285) ctx.lineTo(75, 295) ctx.moveTo(75, 285) ctx.lineTo(65, 295) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(250, 300, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"EMajor\", 250, 270) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(310, 313, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 305, 318) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(270, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 265, 343) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(290, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 285, 343) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(330, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() #ctx.arc(150, 390, 5, 0, 2*math.pi, False) #ctx.lineWidth =3 #ctx.strokeStyle = \"black\" #ctx.stroke() #ctx.closePath() # o ctx.beginPath() ctx.arc(350, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() #ctx.arc(150, 390, 5, 0, 2*math.pi, False) #ctx.lineWidth =3 #ctx.strokeStyle = \"black\" #ctx.stroke() #ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 390, 5, 0, 2*math.pi, False) ctx.moveTo(245, 285) ctx.lineTo(255, 295) ctx.moveTo(255, 285) ctx.lineTo(245, 295) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() background(450, 300, 20, 25, 5, 4, ctx) # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"Cmaj7\", 450, 270) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(490, 338, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 485, 343) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(470, 362, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 465, 367) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(510, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() #ctx.arc(150, 390, 5, 0, 2*math.pi, False) #ctx.lineWidth =3 #ctx.strokeStyle = \"black\" #ctx.stroke() #ctx.closePath() # o ctx.beginPath() ctx.arc(530, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(550, 290, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(50, 390, 5, 0, 2*math.pi, False) ctx.moveTo(445, 285) ctx.lineTo(455, 295) ctx.moveTo(455, 285) ctx.lineTo(445, 295) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath()","tags":"Misc","title":"W11"},{"url":"./w10.html","text":"畫線練習 畫線練習 window.onload=function(){ brython(1); } from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"japanflag1\"] ctx = canvas.getContext(\"2d\") # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 將畫筆移動到 (100, 100) 座標點 ctx.moveTo(100, 100) # 然後畫直線到 (150, 200) 座標點 ctx.lineTo(150, 200) # 畫右上左下的斜線 ctx.moveTo(150, 100) ctx.lineTo(100, 200) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath() from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"japanflag2\"] ctx = canvas.getContext(\"2d\") # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 for i in range(5): ctx.moveTo(100+i*10, 100) ctx.lineTo(100+i*10, 200) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath() from browser import document as doc from browser import html import math import re # 準備繪圖畫布 canvas = doc[\"japanflag3\"] container = doc[\"container3\"] ctx = canvas.getContext(\"2d\") # 以下可以利用 ctx 物件進行畫圖 # 水平線 for i in range(5): ctx.beginPath() # 設定線的寬度為 1 個單位 if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(99, 100+i*30) ctx.lineTo(201, 100+i*30) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直線 for i in range(6): ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 ctx.moveTo(100+i*20, 100) ctx.lineTo(100+i*20, 220) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"AMajor\", 100, 70) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(140, 145, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 135, 150) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(160, 145, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 155, 150) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(180, 145, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 175, 150) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(120, 80, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(200, 80, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(100, 80, 5, 0, 2*math.pi, False) ctx.moveTo(95, 75) ctx.lineTo(105, 85) ctx.moveTo(105, 75) ctx.lineTo(95, 85) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() 上述 from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"japanflag1\"] ctx = canvas.getContext(\"2d\") # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 將畫筆移動到 (100, 100) 座標點 ctx.moveTo(100, 100) # 然後畫直線到 (150, 200) 座標點 ctx.lineTo(150, 200) # 畫右上左下的斜線 ctx.moveTo(150, 100) ctx.lineTo(100, 200) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath() from browser import document as doc import math # 準備繪圖畫布 canvas = doc[\"japanflag2\"] ctx = canvas.getContext(\"2d\") # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 for i in range(5): ctx.moveTo(100+i*10, 100) ctx.lineTo(100+i*10, 200) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath() from browser import document as doc from browser import html import math import re # 準備繪圖畫布 canvas = doc[\"japanflag3\"] container = doc[\"container3\"] ctx = canvas.getContext(\"2d\") # 以下可以利用 ctx 物件進行畫圖 # 水平線 for i in range(5): ctx.beginPath() # 設定線的寬度為 1 個單位 if i == 0: ctx.lineWidth = 7 else: ctx.lineWidth = 1 ctx.moveTo(99, 100+i*30) ctx.lineTo(201, 100+i*30) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 垂直線 for i in range(6): ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 ctx.moveTo(100+i*20, 100) ctx.lineTo(100+i*20, 220) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" ctx.stroke() ctx.closePath() # 1 與 AMajor ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.font = \"30px Arial\" ctx.fillText(\"AMajor\", 100, 70) # 1 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(140, 145, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"1\", 135, 150) ctx.fill() ctx.stroke() ctx.closePath() # 2 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(160, 145, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"2\", 155, 150) ctx.fill() ctx.stroke() ctx.closePath() # 3 ctx.beginPath() ctx.fillStyle = 'black' ctx.strokeStyle = \"black\" ctx.arc(180, 145, 9, 0, 2*math.pi, False) ctx.fill() ctx.stroke() ctx.closePath() ctx.beginPath() ctx.fillStyle = 'white' ctx.font = \"16px Arial\" ctx.fillText(\"3\", 175, 150) ctx.fill() ctx.stroke() ctx.closePath() # o ctx.beginPath() ctx.arc(120, 80, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(200, 80, 5, 0, 2*math.pi, False) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath() # x ctx.beginPath() #ctx.arc(100, 80, 5, 0, 2*math.pi, False) ctx.moveTo(95, 75) ctx.lineTo(105, 85) ctx.moveTo(105, 75) ctx.lineTo(95, 85) ctx.lineWidth =3 ctx.strokeStyle = \"black\" ctx.stroke() ctx.closePath()","tags":"Misc","title":"W10"}]};